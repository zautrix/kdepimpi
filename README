
Howto Compile KO/Pi for Qt-Embedded:

Remove all Makefile files first!

Please look at the files setQtopia and setZaurus in the same dir.

You may have to
- create a softlink from
    /opt/qtopia/include/qpe to /opt/qtopia/include/qtopia
- remove
    -ljpeg in korganizer/Makefilezaurus
-create the directory
   /opt/Qtopia/sharp/plugins
   /opt/Qtopia/sharp/plugins/applets

to get the sources compiled, depending on your Qtopia compiler setup.
The needed Makefile is  Makefile.Embedded.
Copy it and rename it to Makefile.

To build for the Zaurus:
Install Qtopia development environment and the cross-compiler.

The file sharp.tmake.conf contains e DEFINE,which is needed to fix the QWhatsThis problem:
TMAKE_CXXFLAGS		=  blabla  -DADD_TOOLTIP
Add this to your tmake.conf file for sharp.

Now, you can do from command line a:
cz     #comment: for setZaurus
make clean #comment: for removing old Makefiles - if there are any
make
make install
make clean
make dist

to build a binary and source package.
The sources are ../kdepim.src.tar.gz
The binaries are 
korganizer-alarm_1.9.0a_arm.ipk
and 
kdepim_1.9.0a_arm.ipk
, depending on the version.

=========================================================

Howto Compile+Run KO/Pi Desktop for Linux Desktop:

Remove all Makefile files first!

Set the needed environment variables to compile a Qt program.
(e.g. QTDIR, ,... )
Do a
qmake
make clean
make
in this directory.

After compilation, you will find the binary and the libs in ./bin.


Goto ./bin  in console and type type ./kopi 

Now kopi starts.
(UPDATE : Now you have probably to copy the libs to /usr/lib to run KO/Pi).
This can be done by the following prodedure:

Howto build the KDE sync command line tools:

Goto 
./desktop
Adjust the paths ( KDEDIR and  KDE_DEV_DIR ) in the Makefile there.
Type there
make
to build the KDE sync command line tools.
Now switch to super user mode with 
su
Copy everything in the right place with
make install
(Comment out the lines in the makefile which try to copy files, which are not there, e.g. the line "cp -fr /home/polo/eigene/apps/* /opt/kdepimpi/" ).
Now build a rpm with
make dist

make dist uses the rpm spec in ./desktop/rpm/kdepim_rpm.

This all works for a SuSE 9.2.
For other distris you have to adjust some settings.

=========================================================

KOrganizer/Platform-independent (KO/Pi)


This is the  platform-independend version of KOrganizer. It includes a replacement for the
KDE libraries called microkde, which provides the KDE specific functions
KOrganizer needs, but does not add the overhead of the complete implementation.
KOrganizer/Pi compiles with Qt/Embedded 2.3.2 and the corresponding QPE libs.

It compiles with Qt 3.2.3 on the Linux or Windows desktop as well.

KOrganizer/Pi is based on the unaltered original KOrganizer code from the KDE CVS
HEAD branch of spring 2003.

Some functionality of the full KDE version of Korganizer is not present in the
platform-independend, because microkde is not yet complete.

KOrganizer/Pi is licenced under the GPL, the microkde library is licenced under
the LGPL and the original KOrganizer code is licenced under GPL or LPGL.

If you have questions or comments please contact Lutz Rogowski
<rogowski@kde.org>.


History
-------

2.0.0 (January 2005)
 - Korganizer/Pi is now integrated in KDE-Pim/Pi together with KA/Pi.

1.7.8 (Juni 2004)
 - Latest standalone version of Korganizer/Pi (platform-independend).

1.5 (January 2004)
 - Korganizer/E has been renamed to Korganizer/Pi (platform-independend)
   In this version, there are many bugfixes/enhancements.

1.0 (April 2002):

 - First stable release as final submission to the Trolltech Qtopia contest.

0.8 (beta1) (January 2002):

 - Initial release as entry to the Trolltech Qtopia contest.
